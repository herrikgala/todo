@use 'sass:math';

// TO
@function prc($pxOne, $pxTwo) {
	$result: math.div($pxOne, $pxTwo) * 100%;
	@return $result;
}
// REM
@function rem($px) {
	$result: math.div($px, 16) + rem;
	@return $result;
}
// EM
@function em($px) {
	$result: math.div($px, 16) + em;
	@return $result;
}

// Адаптивное свойство
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	//
	@if $type == 1 {
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(
				#{$minSize + px} + #{$addSize} *
					((100vw - #{$minWidth + px}) / #{$maxWidthContainer - $minWidth})
			);
		}
	} @else if $type == 2 {
		//Толька если больше контейнера
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(
				#{$minSize + px} + #{$addSize} *
					((100vw - #{$minWidth + px}) / #{$maxWidthContainer - $minWidth})
			);
		}
	} @else {
		#{$property}: calc(
			#{$minSize +
				px} +
				#{$addSize} *
				((100vw - #{$minWidth + px}) / #{$maxWidthContainer - $minWidth})
		);
	}
}

$transition-property: all;
$transition-duration: 0.3s;
$transition-timing: ease;

@mixin transition(
	$property: $transition-property,
	$duration: $transition-duration,
	$timing: $transition-timing
) {
	-webkit-transition: $property $duration $timing;
	-moz-transition: $property $duration $timing;
	-ms-transition: $property $duration $timing;
	-o-transition: $property $duration $timing;
	transition: $property $duration $timing;
}
